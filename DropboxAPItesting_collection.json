{
	"info": {
		"_postman_id": "b925ffaa-34e9-4f16-93ac-2eae241e58e0",
		"name": "DropboxAPI",
		"description": "API Documentation: [https://www.dropbox.com/developers/documentation/http/documentation](https://www.dropbox.com/developers/documentation/http/documentation)",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "20952083"
	},
	"item": [
		{
			"name": "Check user",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"query\": \"foo\"\n}"
				},
				"url": {
					"raw": "https://api.dropboxapi.com/2/check/user",
					"protocol": "https",
					"host": [
						"api",
						"dropboxapi",
						"com"
					],
					"path": [
						"2",
						"check",
						"user"
					]
				},
				"description": "It will validate the access token, it's only for testing the code and connection to the Dropbox API."
			},
			"response": []
		},
		{
			"name": "Upload file",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response informs the name of uploaded file\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"testing.txt\");\r",
							"});\r",
							"\r",
							"pm.test(\"Response includes the date and hour of server modification\", function () {\r",
							"    pm.expect(pm.response.text()).to.include('\"server_modified\":');\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/octet-stream",
						"type": "text"
					}
				],
				"url": {
					"raw": "https://content.dropboxapi.com/2/files/upload?arg={ \"autorename\": true, \"mode\": \"add\", \"mute\": false, \"path\": \"/ht2/dropbox/testing.txt\", \"strict_conflict\": false}",
					"protocol": "https",
					"host": [
						"content",
						"dropboxapi",
						"com"
					],
					"path": [
						"2",
						"files",
						"upload"
					],
					"query": [
						{
							"key": "arg",
							"value": "{ \"autorename\": true, \"mode\": \"add\", \"mute\": false, \"path\": \"/ht2/dropbox/testing.txt\", \"strict_conflict\": false}"
						}
					]
				},
				"description": "**Upload file**\n\nCreate a new file with the contents provided in the request. Do not use this to upload a file larger than 150 MB.\n\nThe arguments are passed as JSON in the `Dropbox-API-Arg` request header"
			},
			"response": []
		},
		{
			"name": "Get file metadata",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response includes id of the file\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"id:\");\r",
							"});\r",
							"\r",
							"pm.test(\"Response includes the file path\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"path_display\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {}
			},
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"path\": \"/ht2/dropbox/testing.txt\", \r\n    \"include_media_info\": false, \r\n    \"include_deleted\": false, \r\n    \"include_has_explicit_shared_members\": false\r\n}"
				},
				"url": {
					"raw": "https://api.dropboxapi.com/2/files/get_metadata",
					"protocol": "https",
					"host": [
						"api",
						"dropboxapi",
						"com"
					],
					"path": [
						"2",
						"files",
						"get_metadata"
					]
				},
				"description": "**Get file metadata**\n\nReturns the metadata for a file or folder. Note: Metadata for the root folder is unsupported."
			},
			"response": []
		},
		{
			"name": "Delete file",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response includes the date and hour of server modification\", function () {\r",
							"    pm.expect(pm.response.text()).to.include('\"server_modified\":');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {}
			},
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"path\": \"/ht2/dropbox/testing.txt\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://api.dropboxapi.com/2/files/delete_v2",
					"protocol": "https",
					"host": [
						"api",
						"dropboxapi",
						"com"
					],
					"path": [
						"2",
						"files",
						"delete_v2"
					]
				},
				"description": "**Delete File**\n\nDelete the file or folder at a given path. If the path is a folder, all its contents will be deleted too. A successful response indicates that the file or folder was deleted. The returned metadata will be the corresponding FileMetadata or FolderMetadata for the item at time of deletion."
			},
			"response": []
		},
		{
			"name": "Check if file was deleted",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Tag 'deleted' is displayed\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"deleted\");\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {}
			},
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"path\": \"/ht2/dropbox/testing.txt\", \r\n    \"include_media_info\": false, \r\n    \"include_deleted\": true, \r\n    \"include_has_explicit_shared_members\": false\r\n}"
				},
				"url": {
					"raw": "https://api.dropboxapi.com/2/files/get_metadata",
					"protocol": "https",
					"host": [
						"api",
						"dropboxapi",
						"com"
					],
					"path": [
						"2",
						"files",
						"get_metadata"
					]
				},
				"description": "**Check if file was deleted**\n\nThe arguments are passed as JSON in the `Dropbox-API-Arg` request header"
			},
			"response": []
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{access_token}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "client_id",
			"value": "3ei3699sgjbf5a0",
			"type": "string"
		},
		{
			"key": "client_secret",
			"value": "xswz4f1wj19dv4c",
			"type": "string"
		},
		{
			"key": "access_token",
			"value": "sl.BQ9CUHiARbIWXIB6jMun6uo6AQi4rWrUwo1CyaXD_JfWTC5tGE0IG3ALrnSP4rbpsfvPMtqFTYrgK7-8ozd_Tg6_cE29-gKhdx3T8v-HNH-P7U7-1YtAfGwR3rLVHVCvcw8MIWw6Q5Y",
			"type": "string"
		}
	]
}
